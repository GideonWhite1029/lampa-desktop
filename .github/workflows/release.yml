name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.3.1

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run dist

      - name: Get Version
        id: get_version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Release ${{ steps.get_version.outputs.version }}
            
            Changelog:
            - This script was created by Github Actions
          draft: false
          prerelease: false

      - name: Upload ZIP Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_path: build/*.zip
          asset_name: lampa-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.zip
          asset_content_type: application/zip

      - name: Upload EXE Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_path: build/*.exe
          asset_name: lampa-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.exe
          asset_content_type: application/octet-stream

      - name: Upload MSI Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_path: build/*.msi
          asset_name: lampa-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.msi
          asset_content_type: application/octet-stream

      - name: Upload TAR.GZ Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_path: build/*.tar.gz
          asset_name: lampa-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.tar.gz
          asset_content_type: application/gzip
